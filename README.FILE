# Regression Analysis using Linear and Polynomial Regression

## Overview
This project demonstrates the implementation of Linear Regression and Polynomial Regression using Python's `scikit-learn` library. The goal is to fit a regression model to a generated dataset, visualize the results, and evaluate the model's performance using metrics such as Mean Squared Error (MSE) and R² Score.

## Technologies Used
- Python
- NumPy
- Matplotlib
- Scikit-learn

## Dataset
A synthetic dataset is generated using the equation:

y = 4 + 3X + noise

where `X` is randomly generated, and `noise` is added to simulate real-world variations.

## Project Structure
- `linear_regression(X, y)`: Fits and evaluates a Linear Regression model.
- `polynomial_regression(X, y, degree)`: Fits and evaluates a Polynomial Regression model with a given degree.
- Model performance is visualized using Matplotlib.
- R² scores for different models are saved to `regression_results.txt`.

## How to Run the Project
1. Install dependencies if not already installed:
   ```sh
   pip install numpy matplotlib scikit-learn
   ```
2. Run the Python script:
   ```sh
   python script.py
   ```
3. The script will generate plots and save R² scores in `regression_results.txt`.

## Results
- The Linear Regression model fits a straight line to the data.
- Polynomial Regression models with degrees 2 to 5 capture nonlinear relationships.
- A performance plot shows how R² scores change with polynomial degrees.

## Output Files
- **Plots**: Regression results visualized.
- **`regression_results.txt`**: Contains R² scores for all models.

## License
This project is for educational purposes and open for modifications and improvements.

